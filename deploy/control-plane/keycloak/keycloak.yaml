# create namespace for keycloak template
apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: cloud-keycloak
  labels:
    app: sso
spec:
  instances: 1
  externalAccess:
    enabled: false
    tlsTermination: passthrough
  podDisruptionBudget:
    enabled: True
  keycloakDeploymentSpec:
    experimental:
      volumes:
        items:
          - name: cno-realm
            mountPath: /cno
            configMaps:
              - cno-realm
      env:
        - name: KEYCLOAK_IMPORT
          value: /cno/cno-realm.json
status:
   Deployment:
   - keycloak
---

apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: keycloak
    component: keycloak
  name: keycloak
  namespace: $NAMESPACE
  ownerReferences:
  - apiVersion: keycloak.org/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Keycloak
    name: cloud-keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
      component: keycloak
  serviceName: ""
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: keycloak
        component: keycloak
      name: keycloak
      namespace: cno-system
    spec:
      containers:
      - env:
        - name: KEYCLOAK_IMPORT
          value: /cno/cno-realm.json
        - name: DB_VENDOR
          value: POSTGRES
        - name: DB_SCHEMA
          value: public
        - name: DB_ADDR
          value: keycloak-postgresql.cno-system
        - name: DB_DATABASE
          value: root
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USERNAME
              name: keycloak-db-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: keycloak-db-secret
        - name: NAMESPACE
          value: cno-system
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: dns.DNS_PING
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: dns_query=keycloak-discovery.cno-system
        - name: CACHE_OWNERS_COUNT
          value: "2"
        - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
          value: "2"
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: ADMIN_USERNAME
              name: credential-cloud-keycloak
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ADMIN_PASSWORD
              name: credential-cloud-keycloak
        - name: X509_CA_BUNDLE
          value: /var/run/secrets/kubernetes.io/serviceaccount/*.crt
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        image: $KEYCLOAK_IMAGE
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /probes/liveness_probe.sh
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 22
        name: keycloak
        ports:
        - containerPort: 8443
          protocol: TCP
        - containerPort: 9990
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /probes/readiness_probe.sh
          failureThreshold: 10
          initialDelaySeconds: 40
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 22
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/x509/https
          name: sso-x509-https-secret
        - mountPath: /opt/jboss/keycloak/standalone/deployments
          name: keycloak-extensions
        - mountPath: /probes
          name: keycloak-probes
      dnsPolicy: ClusterFirst
      initContainers:
      - env:
        - name: KEYCLOAK_EXTENSIONS
        image: $KEYCLOAK_INIT_CONTAINER
        imagePullPolicy: Always
        name: extensions-init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/extensions
          name: keycloak-extensions
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sso-x509-https-secret
        secret:
          defaultMode: 420
          optional: true
          secretName: sso-x509-https-secret
      - emptyDir: {}
        name: keycloak-extensions
      - configMap:
          defaultMode: 365
          name: keycloak-probes
        name: keycloak-probes