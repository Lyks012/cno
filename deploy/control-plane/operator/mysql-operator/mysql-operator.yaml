apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: innodbclusters.mysql.oracle.com
spec:
  group: mysql.oracle.com
  versions:
    - name: v2alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: ["spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 40
            spec:
              type: object
              required: ["secretName"]
              properties:
                secretName:
                  type: string
                  description: "Name of a Secret containing root/default account password"
                sslSecretName:
                  type: string
                version:
                  type: string
                  pattern: '^\d+\.\d+\.\d+(-.+)?'
                  description: "MySQL Server version"
                edition:
                  type: string
                  pattern: "^(commercial|enterprise)$"
                  description: "MySQL Server Edition (commercial or enterprise)"
                imageRepository:
                  type: string
                  description: "Repository from where images must be pulled from. Default mysql"
                imagePullPolicy:
                  type: string
                imagePullSecrets:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                serviceAccountName:
                  type: string
                baseServerId:
                  type: integer
                  minimum: 0
                  maximum: 4294967195
                  default: 1000
                  description: "Base value for MySQL server_id for instances in the cluster"
                datadirVolumeClaimTemplate:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                  description: "Template for a PersistentVolumeClaim, to be used as datadir"
                mycnf:
                  type: string
                  description: "Custom configuration additions for my.cnf"
                instances:
                  type: integer
                  minimum: 1
                  maximum: 9
                  default: 1
                  description: "Number of MySQL replica instances for the cluster"
                podSpec:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                initDB:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                router:
                  type: object
                  properties:
                    instances:
                      type: integer
                      minimum: 0
                      default: 0
                      description: "Number of MySQL Router instances to deploy"
                    version:
                      type: string
                      pattern: '^\d+\.\d+\.\d+(-.+)?'
                      description: "Override MySQL Router version"
                    podSpec:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                backupProfiles:
                  type: array
                  description: "Backup profile specifications for the cluster, which can be referenced from backup schedules and one-off backup jobs."
                  items:
                    type: object
                    required: ["name"]
                    properties:
                      name:
                        type: string
                      dumpInstance:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      snapshot:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                backupSchedules:
                  type: array
                  description: "Schedules for periodically executed backups"
                  items:
                    type: object
                    required: ["name", "schedule"]
                    properties:
                      name:
                        type: string
                      schedule:
                        type: string
                      backupProfileName:
                        type: string
                      backupProfile:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      deleteBackupData:
                        type: boolean
                        default: false
                      enabled:
                        type: boolean
                        default: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Status
          type: string
          description: Status of the InnoDB Cluster
          jsonPath: .status.cluster.status
        - name: Online
          type: integer
          description: Number of ONLINE InnoDB Cluster instances
          jsonPath: .status.cluster.onlineInstances
        - name: Instances
          type: integer
          description: Number of InnoDB Cluster instances configured
          jsonPath: .spec.instances
        - name: Routers
          type: integer
          description: Number of Router instances configured for the InnoDB Cluster
          jsonPath: .spec.router.instances
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    kind: InnoDBCluster
    listKind: InnoDBClusterList
    singular: innodbcluster
    plural: innodbclusters
    shortNames:
      - ic
      - ics
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mysqlbackups.mysql.oracle.com
spec:
  group: mysql.oracle.com
  scope: Namespaced
  names:
    kind: MySQLBackup
    listKind: MySQLBackupList
    singular: mysqlbackup
    plural: mysqlbackups
    shortNames:
      - mbk
  versions:
    - name: v2alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required: ["clusterName"]
              properties:
                clusterName:
                  type: string
                backupProfileName:
                  type: string
                backupProfile:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                addTimestampToBackupDirectory:
                  type: boolean
                  default: true
                deleteBackupData:
                  type: boolean
                  default: false
            status:
              type: object
              properties:
                status:
                  type: string
                startTime:
                  type: string
                completionTime:
                  type: string
                elapsedTime:
                  type: string
                output:
                  type: string
                method:
                  type: string
                source:
                  type: string
                bucket:
                  type: string
                ociTenancy:
                  type: string
                spaceAvailable:
                  type: string
                size:
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Cluster
          type: string
          description: Name of the target cluster
          jsonPath: .spec.clusterName
        - name: Status
          type: string
          description: Status of the Backup
          jsonPath: .status.status
        - name: Output
          type: string
          description: Name of the produced file/directory
          jsonPath: .status.output
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterkopfpeerings.zalando.org
spec:
  scope: Cluster
  group: zalando.org
  names:
    kind: ClusterKopfPeering
    plural: clusterkopfpeerings
    singular: clusterkopfpeering
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kopfpeerings.zalando.org
spec:
  scope: Namespaced
  group: zalando.org
  names:
    kind: KopfPeering
    plural: kopfpeerings
    singular: kopfpeering
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
# The main role for the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-operator
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps"]
    verbs: ["get", "list", "patch", "update", "watch", "delete"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "services"]
    verbs: ["get", "patch", "update", "create", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["patch", "update", "create"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["create", "get", "delete"]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs", "cronjobs"]
    verbs: [ "create", "get", "list", "patch", "update", "watch", "delete"]
  - apiGroups: ["apps"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["mysql.oracle.com"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["zalando.org"]
    #resources: ["clusterkopfpeerings", "kopfpeerings"]
    resources: ["*"]
    verbs: ["get", "patch", "list", "watch"]
---
# role for the server sidecar
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-sidecar
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps"]
    verbs: ["get", "list", "patch", "update", "watch", "delete"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "services"]
    verbs: ["get", "patch", "update", "create", "delete"]
  - apiGroups: ["mysql.oracle.com"]
    resources: ["innodbclusters"]
    verbs: ["*"]
---
# Give access to the operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mysql-operator
subjects:
  #  - kind: ServiceAccount
  #  name: mysql-operator-sa
  #  namespace: mysql-operator
  # TODO The following entry is for dev purposes only and must be deleted
  - kind: Group
    name: system:serviceaccounts
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: mysql-operator
  apiGroup: rbac.authorization.k8s.io
---
---
# Source: mysql-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-operator
  labels:
    app: mysql-operator
imagePullSecrets:
- name: $SA
---
apiVersion: v1
kind: Secret
metadata:
  name: cno-api-db-secret
stringData:
  rootPassword: MySQL202!
---
# Source: mysql-operator/templates/orc-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-operator-orc
  labels:
    app: mysql-operator
data:
  TOPOLOGY_USER: "b3JjaGVzdHJhdG9y"
  TOPOLOGY_PASSWORD: "RTZZQzFTZDAyMA=="
---
# Source: mysql-operator/templates/orc-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-operator-orc
  labels:
    app: mysql-operator
data:
  orchestrator.conf.json: "{\n  \"ApplyMySQLPromotionAfterMasterFailover\": false,\n  \"BackendDB\": \"sqlite\",\n  \"Debug\": false,\n  \"DetachLostReplicasAfterMasterFailover\": true,\n  \"DetectClusterAliasQuery\": \"SELECT CONCAT(SUBSTRING(@@hostname, 1, LENGTH(@@hostname) - 1 - LENGTH(SUBSTRING_INDEX(@@hostname,'-',-2))),'.',SUBSTRING_INDEX(@@report_host,'.',-1))\",\n  \"DetectInstanceAliasQuery\": \"SELECT @@hostname\",\n  \"DiscoverByShowSlaveHosts\": false,\n  \"FailMasterPromotionIfSQLThreadNotUpToDate\": true,\n  \"HTTPAdvertise\": \"http://{{ .Env.HOSTNAME }}-svc:80\",\n  \"HostnameResolveMethod\": \"none\",\n  \"InstancePollSeconds\": 5,\n  \"ListenAddress\": \":3000\",\n  \"MasterFailoverDetachReplicaMasterHost\": true,\n  \"MySQLHostnameResolveMethod\": \"@@report_host\",\n  \"MySQLTopologyCredentialsConfigFile\": \"/etc/orchestrator/orc-topology.cnf\",\n  \"OnFailureDetectionProcesses\": [\n    \"/usr/local/bin/orc-helper event -w '{failureClusterAlias}' 'OrcFailureDetection' 'Failure: {failureType}, failed host: {failedHost}, lost replcas: {lostReplicas}' || true\",\n    \"/usr/local/bin/orc-helper failover-in-progress '{failureClusterAlias}' '{failureDescription}' || true\"\n  ],\n  \"PostIntermediateMasterFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event '{failureClusterAlias}' 'OrcPostIntermediateMasterFailover' 'Failure type: {failureType}, failed hosts: {failedHost}, slaves: {countSlaves}' || true\"\n  ],\n  \"PostMasterFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event '{failureClusterAlias}' 'OrcPostMasterFailover' 'Failure type: {failureType}, new master: {successorHost}, slaves: {slaveHosts}' || true\"\n  ],\n  \"PostUnsuccessfulFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper event -w '{failureClusterAlias}' 'OrcPostUnsuccessfulFailover' 'Failure: {failureType}, failed host: {failedHost} with {countSlaves} slaves' || true\"\n  ],\n  \"PreFailoverProcesses\": [\n    \"/usr/local/bin/orc-helper failover-in-progress '{failureClusterAlias}' '{failureDescription}' || true\"\n  ],\n  \"ProcessesShellCommand\": \"sh\",\n  \"RaftAdvertise\": \"{{ .Env.HOSTNAME }}-svc\",\n  \"RaftBind\": \"{{ .Env.HOSTNAME }}\",\n  \"RaftDataDir\": \"/var/lib/orchestrator\",\n  \"RaftEnabled\": true,\n  \"RaftNodes\": [],\n  \"RecoverIntermediateMasterClusterFilters\": [\n    \".*\"\n  ],\n  \"RecoverMasterClusterFilters\": [\n    \".*\"\n  ],\n  \"RecoveryIgnoreHostnameFilters\": [],\n  \"RecoveryPeriodBlockSeconds\": 300,\n  \"RemoveTextFromHostnameDisplay\": \":3306\",\n  \"SQLite3DataFile\": \"/var/lib/orchestrator/orc.db\",\n  \"SlaveLagQuery\": \"SELECT TIMESTAMPDIFF(SECOND,ts,NOW()) as drift FROM sys_operator.heartbeat ORDER BY drift ASC LIMIT 1\",\n  \"UnseenInstanceForgetHours\": 1\n}"
  orc-topology.cnf: |
    [client]
    user = {{ .Env.ORC_TOPOLOGY_USER }}
    password = {{ .Env.ORC_TOPOLOGY_PASSWORD }}
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-operator
  namespace: $NAMESPACE
  labels:
    app: mysql-operator
    version: "8.0.26-2.0.2"
    app.kubernetes.io/name: mysql-operator
    app.kubernetes.io/instance: mysql-operator
    app.kubernetes.io/version: "8.0.26-2.0.2"
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-operator
      release: mysql-operator
  template:
    metadata:
      labels:
        app: mysql-operator
        release: mysql-operator
      annotations:
        checksum/config: 0728c31a378a32b09e3a0e72611f4a3bb3ee5720c1ff9bdd2fc719ae28234ed9
        checksum/secret: f9296cc326e6906162c4328796d372e315d440dd1b65a6de3888335fd0ff568b
    spec:
      serviceAccountName: mysql-operator 
      containers:
        - name: operator
          image: $MYSQL_OPERATOR_IMAGE #"quay.io/presslabs/mysql-operator:0.4.0"
          imagePullPolicy: IfNotPresent
          ressources:
          env:
            - name: ORC_TOPOLOGY_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-operator-orc
                  key: TOPOLOGY_USER
            - name: ORC_TOPOLOGY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-operator-orc
                  key: TOPOLOGY_PASSWORD
         
          args: ["mysqlsh", "--log-level=@INFO", "--pym", "mysqloperator", "operator"] 
---
# Source: mysql-operator/templates/orc-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-operator
  namespace: $NAMESPACE
  labels:
    app: mysql-operator
spec:
  type: ClusterIP
  selector:
    app: mysql-operator
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000