
cnoSuperAdminPassword: beopenit
# url of the api server of your k8s cluster
defaultClusterApiServerUrl: https://tools.beopenit.com
PodSecurityPolicyEnabled: true
# On openshift environment you have to set this variable to true
SecurityContextConstraintsEnabled: false

expose:
  # ingress | route | loadbalancer | nodeport
  type: ingress
  ingressClass: nginx
  # For ingress or route exposition type
  domain: tools.beopenit.com
  # for nodeport exposition type
  nodePortIPAddress: xx.xx.xx.xx

cnoApi:
  image: docker.io/beopenit/cno-api:1.0.0-rc
  mysqlDBImage: docker.io/percona:5.7.35
  dbStorage: 15Gi

cnoUi:
  image: docker.io/beopenit/cno-ui:1.0.0-rc

cnoNotification:
  image: docker.io/beopenit/cno-api:1.0.0-rc

data-plane:
  cnoAgent:
    image: docker.io/beopenit/cno-agent:1.0.0-rc

  cnoOperator:
    image: docker.io/beopenit/onboarding-operator-kubernetes:1.0.0-rc

  cnocdOperator:
    image: docker.io/beopenit/cno-cd-operator:1.0.0-rc

keycloak:
  image: quay.io/keycloak/keycloak:15.0.1
  databaseImage: registry.access.redhat.com/rhscl/postgresql-10-rhel7:1
  operatorImage: quay.io/keycloak/keycloak-operator:15.0.1
  initContainerImage: quay.io/keycloak/keycloak-init-container:master
  dbStorage: 5Gi

strimzi-kafka-operator:
  defaultImageRegistry: quay.io
  defaultImageRepository: strimzi
  defaultImageTag: 0.26.0
  watchNamespaces: []
  watchAnyNamespace: false
  podSecurityContext: {}
  securityContext: {}
  createGlobalResources: true
  resources:
    limits:
      memory: 384Mi
      cpu: 1000m
    requests:
      memory: 384Mi
      cpu: 200m


mysql-operator:
  image: docker.io/bitpoke/mysql-operator:v0.5.1
  sidecarImage: docker.io/bitpoke/mysql-operator-sidecar-8.0:v0.5.1
  replicas: 1
  imagePullPolicy: IfNotPresent
  installCRDs: true
  nodeSelector: {}
  tolerations: []
  resources: {}
  securityContext:
    runAsNonRoot: true
    # 65532 is the UID for nonroot user from distroless image
    runAsUser: 65532
    runAsGroup: 65532
    fsGroup: 65532
  extraArgs:
    - --metrics-exporter-image=docker.io/prom/mysqld-exporter:v0.13.0
  rbac:
    create: true
    # if rbac is false this service account is used
    serviceAccountName: default

  orchestrator:
    image: docker.io/bitpoke/mysql-operator-orchestrator:v0.5.1
    # orchestrator user and password to manage MySQL clusters
    topologyUser: orchestrator
    topologyPassword:  sfndsodnfsf
    # secretName:  # you can specify which secret to use for orchestrator topology credentials
    resources: {}
    persistence:
      enabled: true
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: "ReadWriteOnce"
      size: 5Gi