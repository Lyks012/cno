apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: cno-api
  name: cno-api
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: cno-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: cno-api
    spec:
      containers:
      - image: {{ .Values.cnoApi.image | default "beopenit/cno-api:1.0.0-rc" }}
        imagePullPolicy: Always
        name: cno-api
        ports:
        - containerPort: 8081
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: DEFAULT_SUPER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cno-config
              key: cnoSuperAdminPassword
        - name: IN_CLUSTER
          value: "true"
        - name: SERVER_URL
          value: {{ printf "%s.%s" "https://cno-api"  .Values.expose.domain }}
        - name: UI_URL
          value: {{ printf "%s.%s" "https://cno"  .Values.expose.domain }}
        - name: SERVER_PORT
          value: "8080"
        - name: OIDC_REALM
          value: cno
        - name: OIDC_SERVER_BASE_URL
          value: {{ printf "%s.%s.%s" "http://keycloak-discovery" .Release.Namespace  "svc.cluster.local:8080" }}
        - name: OIDC_CLIENT_ID
          value: "cno-api"
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: cno-config
              key: oidc_client_secret
        - name: KAFKA_BROKERS
          value: "cno-kafka-cluster-kafka-bootstrap:9093"
        - name: KAFKA_TlS_ENABLED
          value: "true"
        - name: KAFKA_TLS_SKIP_VERIFY
          value: "false"
        - name: KAFKA_VERBOSE
          value: "false"
        - name: DB_HOST
          value: "cno-api-mysql-master"
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: "cnoapi"
        - name: DB_USERNAME
          value: "root"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cno-api-db-secret
              key: ROOT_PASSWORD
        - name: CREATE_DEFAULT_CLUSTER
          value: "true"
        - name: DEFAULT_EXTERNAL_BROKERS_URL
          value: {{ printf "%s.%s:443" "bootstrap-cno"  .Values.expose.domain }}
        - name: DEFAULT_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cno-config
              key: default_cluster_id
        - name: DEFAULT_CLUSTER_API_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: cno-config
              key: defaultClusterApiServerUrl
        - name: KAFKA_CLUSTER_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: KAFKA_CA_CERT
          value: /.key/ca/ca.crt
        - name: KAFKA_CLIENT_CERT
          value: /.key/user/user.crt
        - name: KAFKA_CLIENT_KEY
          value: /.key/user/user.key
        volumeMounts:
        - name: kafkaca
          mountPath: "/.key/ca"
          readOnly: true
        - name: kafkaclientcred
          mountPath: "/.key/user"
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-api
      volumes:
      - name: kafkaca
        secret:
          secretName: cno-kafka-cluster-cluster-ca-cert
      - name: kafkaclientcred
        secret:
          secretName: cno-kafka-superadmin